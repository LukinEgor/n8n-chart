apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.service.name }}
    spec:
      initContainers:
        # TODO: check database connection
        - name: init-postgres
          image: busybox:1.28
          command: ['sh', '-c', "sleep 10"]

      containers:
      - name: n8n
        command: ["n8n"]
        args: ["start"]
        image: {{ .Values.image }}:{{ .Values.version }}
        ports:
        - containerPort: {{ .Values.port }}

        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.port }}

{{ if .Values.postgresql.enabled }}
        env:
        - name: DB_TYPE
          value: postgresdb
        - name: DB_POSTGRESDB_DATABASE
          value: {{ .Values.postgresql.database }}
        - name: DB_POSTGRESDB_HOST
          value: {{ .Values.postgresql.host }}
        - name: DB_POSTGRESDB_PASSWORD
          value: {{ .Values.postgresql.password }}
        - name: DB_POSTGRESDB_PORT
          value: {{ quote .Values.postgresql.port }}
        - name: DB_POSTGRESDB_USER
          value: {{ .Values.postgresql.user }}
{{ end }}
